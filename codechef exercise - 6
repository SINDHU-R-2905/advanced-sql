1.Project - CASE conditions with aggregation
Write a query to group the dishes based on the price as:

High - If Price more than 18
Medium - If Price of the dishes is between 10 and 18
Low - If the price is less than 10.
The final output table should have the following 2 columns

the price group aliased as 'Pay_Category' as above
the count of the dishes falling in the respective category aliased as 'dish_count'
Expected output
┌──────────────┬────────────┐
│ Pay_Category │ Dish_count │
├──────────────┼────────────┤
│ High         │ 4          │
│ Low          │ 2          │
│ Medium       │ 7          │
└──────────────┴────────────┘
Your table 'Orders' has the following fields:

order_id INT PRIMARY KEY,
item_name VARCHAR(255),
cuisine VARCHAR(255) ,
category VARCHAR(255) ,
price DECIMAL(10,2),
status VARCHAR(255)

  when price > 18 then 'High'
when price between 10 and 18 then 'Medium'
when price < 10 then 'Low'
else 'NA'
end AS Pay_Category,
count(*) AS Dish_count
from Orders
group by Pay_Category;


2.Project - Conditional SUM
Write a query to do the following

Find the sum of prices of the dishes fall that under the category 'Non veg' for each cuisine.
The output table should have the types of Cuisines and the sum of prices of the 'Non veg' dishes(mentioned under the column 'category') for each cuisine. Alias the sum function as 'Non_Veg_Price'.
Expected output
┌──────────┬───────────────┐
│ cuisine  │ Non_Veg_Price │
├──────────┼───────────────┤
│ American │ 0             │
│ Italian  │ 80.95         │
│ Thai     │ 0             │
└──────────┴───────────────┘
Your table 'Orders' has the following fields:

order_id INT PRIMARY KEY,
item_name VARCHAR(255),
cuisine VARCHAR(255) ,
category VARCHAR(255) ,
price DECIMAL(10,2),
status VARCHAR(255)


        select Cuisine,
sum (case when category = 'Non veg' then price else 0 end)AS Non_Veg_Price
from Orders
group by Cuisine;

3.Practice Problem - 4
Write a query to do the following

Find out what percentage of the total revenue (sum of all orders) is contributed by American Cuisine. - Alias the percentage calculation function as 'American_Revenue'. Round the final value to 2 decimal places
Expected output
┌──────────────────┐
│ American_Revenue │
├──────────────────┤
│ 27.75            │
└──────────────────┘
Your table 'Orders' has the following fields:

order_id INT PRIMARY KEY,
item_name VARCHAR(255),
cuisine VARCHAR(255) ,
category VARCHAR(255) ,
price DECIMAL(10,2),
status VARCHAR(255)

select round (
100.0 * sum (case when Cuisine = 'American' then price else 0 end) / sum (price),2)AS American_Revenue 
from Orders;

4.Consider a supermarket database

Table 'fruit' has the list of all fruits available in the market(few of them could be out of stock).
Table 'inventory' has the updated list of items in the supermarket.
Write a query to find the list of fruits available in the supermarket. (f_name column has the name of the fruits and inv_name has the name of the items in the inventory, you are suppose to output the name of the fruits.)

Expected output
┌────────────┐
│   f_name   │
├────────────┤
│ Banana     │
│ Cherry     │
│ Grape      │
│ Kiwi       │
│ Pear       │
│ Pineapple  │
│ Watermelon │
└────────────┘

select f_name
from fruit
intersect
select inv_name
from inventory;

